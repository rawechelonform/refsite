@import url('https://fonts.googleapis.com/css2?family=DotGothic16&display=swap');

:root {
  --crt: rgb(0,255,0);
  --bg: #000;

  --term-font-size: 20px;
  --term-gap: 8px;
  --hint-row-h: 1.2em;

  --avatar-frames: 4;
  --avatar-src-w: 1536px;
  --avatar-src-h: 1024px;
  --avatar-frame-w: calc(var(--avatar-src-w) / var(--avatar-frames));
  --avatar-frame-h: var(--avatar-src-h);

  --avatar-scale: 0.22;
  --avatar-w: calc(var(--avatar-frame-w) * var(--avatar-scale));
  --avatar-h-full: calc(var(--avatar-frame-h) * var(--avatar-scale));

  --avatar-top-crop: 190px;
  --avatar-bottom-crop: 24px;

  --avatar-cropY: calc(-1 * var(--avatar-top-crop) * var(--avatar-scale));
  --avatar-visible-h: calc(var(--avatar-frame-h) - var(--avatar-top-crop) - var(--avatar-bottom-crop));
  --avatar-h: calc(var(--avatar-visible-h) * var(--avatar-scale));

  --avatar-step-speed: 0.5s;
  --walk-duration: 1.6s;
  --walk-end: 450px;

  /* Room/computer stack width (match your art) */
  --room-w: 640px;
}

* { box-sizing: border-box; }

html, body {
  height: 100%;
  margin: 0;
  background: var(--bg);
  color: var(--crt);
  font-family: 'DotGothic16', system-ui, monospace;
}

.hidden { display: none !important; }

/* ---------- ROOM VIEW ---------- */
.room {
  min-height: 100vh;
  display: grid;
  place-items: center;
  padding: 24px;
  background: var(--bg);
}

/* Button wrapper around the stack */
.computer-btn {
  display: inline-block;
  border: 0;
  background: transparent;
  padding: 0;
  cursor: default;               /* JS toggles to pointer only when over opaque pixels */
}
.computer-btn.hot { cursor: pointer; }    /* set by JS hit-test */
.computer-btn:active .stack { transform: scale(0.985); }
.computer-btn:hover .stack { transform: scale(1.01); } /* optional subtle hover scale */

/* Layer stack */
.stack {
  position: relative;
  width: var(--room-w);
  aspect-ratio: 4 / 3;           /* adjust if your art isn’t 4:3 */
  transition: transform 120ms ease;
}

.layer {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 120ms linear;
  pointer-events: none;          /* ensure the button receives events */
}
.white-set { z-index: 20; }
.black-set { z-index: 10; }
.show { opacity: 1; }

/* Hover glow overlay — shown only when .computer-btn.hot is present */
.hover-layer {
  z-index: 30;                   /* above other layers */
  opacity: 0;
  transition: opacity 140ms ease;
  pointer-events: none;
}
/* IMPORTANT: no :hover rule — JS adds .hot when over opaque pixels */
.computer-btn.hot .hover-layer { opacity: 1; }

/* Zoom player image (same sizing as stack for a seamless swap) */
.zoom {
  display: block;
  width: var(--room-w);
  aspect-ratio: 4 / 3;           /* match your zoom frames ratio */
  height: auto;
}

/* ---------- GATE VIEW ---------- */
.wrap {
  min-height: 100vh;
  display: grid;
  place-items: center;
  padding: 24px;
}

.stage, .terminal { width: 100%; }

@media (min-width: 880px) {
  .wrap {
    grid-template-columns: 420px minmax(420px, 720px);
    gap: 40px;
    align-items: center;
  }
  .stage { justify-self: end; }
  .terminal { justify-self: start; }
}

.stage {
  position: relative;
  height: 280px;
  max-width: 420px;
  background: var(--bg);
  overflow: hidden;
}

.terminal {
  padding: 24px;
  background: var(--bg);
  display: grid;
  grid-template-rows: auto auto var(--hint-row-h);
  row-gap: var(--term-gap);
}

.line {
  font-size: var(--term-font-size);
  letter-spacing: 0.08em;
  line-height: 1;
  margin: 0;
}

.prompt {
  display: flex;
  align-items: center;
  visibility: hidden;
  pointer-events: none;
}
.prompt.show { visibility: visible; pointer-events: auto; }

.caret { font-size: var(--term-font-size); }
.caret::after { content: "\00a0"; }

.typed {
  font-size: var(--term-font-size);
  letter-spacing: 0.08em;
  white-space: pre-wrap;
  color: var(--crt);
}

.cursor-block {
  display: inline-block;
  width: 1.1ch;
  height: 1.3em;
  animation: cursorFlip 0.8s steps(1,end) infinite;
}
@keyframes cursorFlip {
  0%,49%   { background: var(--crt); color: #000; }
  50%,100% { background: var(--bg);  color: var(--crt); }
}

.cursor-sel,
.cursor-sel * { background: var(--crt) !important; color: #000 !important; }
::selection { background: var(--crt) !important; color: #000 !important; }
::-moz-selection { background: var(--crt) !important; color: #000 !important; }

.go-pill { display:inline-block; padding:0 0.15ch; background:var(--bg); color:var(--crt); }

#cmd.cmd {
  position: absolute !important;
  left: -9999px !important;
  width: 1px; height: 1px; opacity: 0; border: 0;
}

.hint {
  font-style: italic;
  opacity: 0.9;
  font-size: 16px;
  height: var(--hint-row-h);
  line-height: 1;
  margin: 0;
  margin-left: calc(1.3ch + 6px);
}

/* ---------- AVATAR ---------- */
.figure {
  position: absolute;
  bottom: calc(40px + 2vh);
  left: -120px;
  width: var(--avatar-w);
  height: var(--avatar-h);
  overflow: hidden;
  background-image: url('avatar/avatar_intro.png'); /* repo-root/avatar/... */
  background-repeat: no-repeat;
  background-position: 0 var(--avatar-cropY);
  background-size: calc(var(--avatar-src-w) * var(--avatar-scale))
                   calc(var(--avatar-src-h) * var(--avatar-scale));
  image-rendering: pixelated;
  transform-origin: bottom left;
}

.figure.walking {
  animation: walk-in var(--walk-duration) linear forwards,
             avatar-walk var(--avatar-step-speed) steps(2) infinite;
}
.figure.forward {
  background-position: calc(-2 * var(--avatar-w)) var(--avatar-cropY);
  transform: translateX(var(--walk-end));
}

@keyframes walk-in {
  0%{ transform: translateX(0); opacity:0; }
  10%{ opacity:1; }
  100%{ transform: translateX(var(--walk-end)); }
}
@keyframes avatar-walk {
  from{ background-position: 0 var(--avatar-cropY); }
  to  { background-position: calc(-2 * var(--avatar-w)) var(--avatar-cropY); }
}
